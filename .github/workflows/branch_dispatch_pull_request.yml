name: Branch Dispatch

on:
  workflow_run:
    workflows: [Event Receiver]
    types:
      - completed

permissions:
  actions: read
  contents: read
  pull-requests: read

jobs:
  branch_dispatch:
    runs-on: ubuntu-latest

    steps:
      - name: Install JQ for parsing JSON
        run: |
          sudo apt-get install jq

      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v3

      # 1. "workflow_run" does not allow passing variables through event payload. Therefore, we
      # have to save the information about the PR in artifacts.
      # 2. The default Github action for downloading artifacts only works for jobs within the same
      # workflow. Use a customized scripts to download and parse the artifacts here.
      - name: Download JSON artifact from event_receiver.yml
        uses: ./.github/my_actions/download_artifact/
        id: get_artifact
        with:
          workflow_run_id: ${{ github.event.workflow_run.id }}

      # See comments in token.md
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Check actor's identity
        env:
          APP_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          if ! curl -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  -H "Authorization: Bearer $APP_TOKEN" \
                  https://api.github.com/repos/${{ github.repository }}/collaborators \
                  | jq '.[].login' | grep "${{ steps.get_artifact.sender_repo_owner }}";
          then
            echo "Account ${{ steps.get_artifact.sender_repo_owner }} doesn't have the permission to run ${{ steps.get_artifact.sender_repo_owner }}!" \
              && false;
          fi

      - name: Create environment variables
        env:
          COMMIT_MESSAGE: ''
        run: |
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_ENV

      # Unbelievably, for pull requests only, there is apparently no way to get
      # the commit message directly via the github API.
      # See https://github.com/orgs/community/discussions/28474
      - name: Checkout commit sha (Pull Request only)
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.get_artifact.head_sha }}

      - name: Get commit mesage (Pull Request only)
        run: |
          echo "commit_message=$(git show -s --format=%s)" >> $GITHUB_ENV

      - name: Check existence of wic
        uses: ./.github/my_actions/check_existence/ # Must start with ./
        id: ce_wic
        with:
          repository: workflow-inference-compiler
          sender_repo_owner: ${{ steps.get_artifact.sender_repo_owner }}
          sender_repo_ref: ${{ steps.get_artifact.sender_repo_ref }}
          default_owner: PolusAI
          default_branch: master
          access_token: ${{ steps.generate_token.outputs.token }}

      # For other repositories, the entire step below should be copied and edited to make new steps.
      - name: Check existence of mm-workflows
        uses: ./.github/my_actions/check_existence/ # Must start with ./
        id: ce_mm-workflows
        with:
          repository: mm-workflows
          sender_repo_owner: ${{ steps.get_artifact.sender_repo_owner }}
          sender_repo_ref: ${{ steps.get_artifact.sender_repo_ref }}
          default_owner: PolusAI
          default_branch: main
          access_token: ${{ steps.generate_token.outputs.token }}

      - name: Branch dispatch build_and_test.yml
        uses: ./.github/my_actions/branch_dispatch/ # Must start with ./
        id: bd_build_and_test
        with:
          repository: workflow-inference-compiler
          workflow_yml: build_and_test.yml
          sender_repo: ${{ steps.get_artifact.sender_repo_owner }}/${{ steps.get_artifact.sender_repo_name }}
          sender_repo_owner: ${{ steps.ce_wic.outputs.owner }}
          sender_repo_ref: ${{ steps.ce_wic.outputs.ref }}
          event_type: ${{ steps.get_artifact.event_name }}
          commit_message: ${{ env.commit_message }}  # NOTE: This may still be susceptible to script injection attacks.
          mm_workflows_owner: ${{ steps.ce_mm-workflows.outputs.owner }}
          mm_workflows_ref: ${{ steps.ce_mm-workflows.outputs.ref }}
          access_token: ${{ steps.generate_token.outputs.token }}

      - name: Branch dispatch build_and_run_workflows.yml
        uses: ./.github/my_actions/branch_dispatch/ # Must start with ./
        id: bd_build_and_run_workflows
        with:
          repository: workflow-inference-compiler
          workflow_yml: build_and_run_workflows.yml
          sender_repo: ${{ steps.get_artifact.sender_repo_owner }}/${{ steps.get_artifact.sender_repo_name }}
          sender_repo_owner: ${{ steps.ce_wic.outputs.owner }}
          sender_repo_ref: ${{ steps.ce_wic.outputs.ref }}
          event_type: ${{ steps.get_artifact.event_name }}
          commit_message: ${{ env.commit_message }}  # NOTE: This may still be susceptible to script injection attacks.
          mm_workflows_owner: ${{ steps.ce_mm-workflows.outputs.owner }}
          mm_workflows_ref: ${{ steps.ce_mm-workflows.outputs.ref }}
          access_token: ${{ steps.generate_token.outputs.token }}
